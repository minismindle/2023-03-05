WSAEventSelect = WSAEventSelect가 핵심이 됨
소켓과 관련된 네트워크 이벤트를 이벤트 객체를 통해 감지

이벤트 객체 관련 함수들
생성 : WSACreateEvent(수동 리셋 Manual-Reset + Non-Signaled상태 시작)
삭제 : WSACloseEvent
신호 상태 감지 : WSAWaitForMultipleEvents
구체적인 네트워크 이벤트 알아내기 : WSAEnumNewtworkEvents
소켓 <-> 이벤트 객체 연동
WSAEventSelect(socket,event,networkEvents);
관심있는 네트워크 이벤트
FD_ACCEPT -> 접속한 클라가 있음 accept
FD_READ -> 데이터 수신 가능 recv, recvfrom
FD_WRITE -> 데이터 송신 가능 send, sendto
FD_CLOSE -> 상대가 접속 종료
FD_CONNECT -> 통신을 위한 연결 절차 완료
FD_OOB
주의 사항
WSAEventSelect 함수를 호출하면, 해당 소켓을 자동으로 넌블로킹 모드 전환
accept() 함수가 리턴하는 소켓은 listenSocket과 동일한 속성을 갖는다.
따라서 clientSocket은 FD_READ,FD_WRITE등을 다시 등록 필요
드물게 WSAEWOULDBLOCK 오류가 뜰 수 있으니 예외 처리 필요
중요) 
-이벤트 발생 시 적절한 소켓 함수 호출해야함
-아니면 다음 번에는 동일 네트워크 이벤트가 발생X
ex) FD_READ이벤트 떴으면 recv()호출해야 하고 안하면 FD_READ 두 번 다시 X

1) count, event
2) waitAll : 모두 기다림? 하나만 완료 되어도 OK?
3) timeout : 타임아웃
4) 지금은 false
return : 완료된 첫번째 인덱스
WSAWaitForMultipleEvents

1) socket
2) eventObject : socket 과 연동된 이벤트 객체 핸들을 넘겨주면, 이벤트 객체를 non-signaled
3) networkEvent : 네트워크 이벤트 / 오류 정보가 저장
 WSAEnumNetworkEvents
